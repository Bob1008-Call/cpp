（1）	指针和引用的区别
i.	指针声明时可以不赋值；引用声明时必须初始化
ii.	指针++在32为操作系统向后偏移4个字节，引用++是给实体加对应的大小
iii.	Sizeof指针32为操作系统下是4，引用是引用实体的大小
iv.	指针由多级指针，引用没有多级引用
v.	指针可以随时改变指向，引用在初始化后就不能改变了
vi.	有NULL指针，没有NULL引用
vii.	访问实体方式不同，指针式解引用，引用编译器自己处理
viii.	引用比指针更安全

（2）	堆（较灵活）和栈的区别
i.	管理方式：栈由操作系统分配释放，堆需要程序员释放，容易产生内存泄漏
ii.	空间大小：每个进程拥有栈的大小远远小于堆的大小 64位windows1MB linux：10
iii.	生长方式：堆向上，内存由低到高，栈向下：内存由高到低
iv.	分配方式：堆：动态，没有静态；栈：静态：操作系统完成（局部变量）、动态（alloca，操作系统自动释放）
v.	分配效率：栈：硬件层支持：分配专门的寄存器存放栈的地址，效率高；堆由C/C++提供的库函数、运算符完成，实现机制复杂
vi.	存放内容：栈：函数返回地址、相关参数、局部变量、寄存器、函数调用（断点保存）；堆：一般情况堆顶使用一个字节的空间存放堆的大小、堆中存放的内容手动添加的
vii.	https://blog.csdn.net/C1029323236/article/details/84727063
viii.	还有数据结构中的栈

