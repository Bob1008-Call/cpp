1.new背后实现机制（大致分为以下三步）：
（1）首先调用上面的operator new标准库函数，传入的参数为class A的大小，这里为8个字节，这样函数的返回的是分配内存的起始地址。
（2）上面分配的内存是未初始化的，也是未类型化的，第二部就是在这一块原始的内存上堆类对象进行初始化，调用的是相应的构造函数，这里调用的是A(10)；这个函数，从图中可以看到这块申请的内存进行了初始化，var = 10，file指向打开的文件。
（3）最后一步就是返回新分配并构造好的对象的指针，这里pA指向这块内存，pA的类型为类A对象的指针。
2.delete背后实现机制（大致分为两步）：
（1）调用pA指向对象的析构函数，对打开的文件进行关闭。
（2）通过上面提到的标准库函数operator delete来释放该对象的内存，传入函数的参数为pA的值。即之前返回的地址。
总结： new和delete是用户进行动态内存申请和释放的操作符，operator new和operator delete是系统提供的全局函数，new在底层调用operator new全局函数来申请空间，delete在底层调用operator delete全局函数来释放空间。
operator new：该函数是用过malloc来申请空间，当malloc申请空间成功是直接返回；申请空间失败，尝试执行空间不足应对措施，如果该应对措施用户设置了，则继续申请，否则抛异常。
operator delete：该函数最终是通过free来释放空间的。
